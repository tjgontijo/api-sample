generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model State {
  id         String   @id @default(uuid())
  shortName  String
  name       String
  region     String
  created_at DateTime @default(now())
  Plan       Plan[]
  User       User[]

  @@map("states")
}

model Role {
  id                 String               @id @default(uuid())
  name               String
  created_at         DateTime             @default(now())
  permissions        Permission[]         @relation("RoleToPermission")
  User               User[]
  RolesOnPermissions RolesOnPermissions[]

  @@map("roles")
}

model Permission {
  id                 String               @id @default(uuid())
  resource           String
  permission         String
  created_at         DateTime             @default(now())
  roles              Role[]               @relation("RoleToPermission")
  RolesOnPermissions RolesOnPermissions[]
  UserOnPermissions  UserOnPermissions[]

  @@map("permissions")
}

model RolesOnPermissions {
  roleId       String
  permissionId String
  created_at   DateTime   @default(now())
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
  @@map("roles_on_permissions")
}

model User {
  id                String              @id @default(uuid())
  roleId            String
  stateId           String
  name              String
  email             String              @unique
  password_hash     String
  created_at        DateTime            @default(now())
  roles             Role                @relation(fields: [roleId], references: [id])
  state             State               @relation(fields: [stateId], references: [id])
  UserOnPermissions UserOnPermissions[]

  @@map("users")
}

model UserOnPermissions {
  permissionId String
  userId       String
  created_at   DateTime   @default(now())
  permission   Permission @relation(fields: [permissionId], references: [id])
  user         User       @relation(fields: [userId], references: [id])

  @@id([userId, permissionId])
  @@map("users_on_permissions")
}

model ThematicArea {
  id         String   @id @default(uuid())
  short_name String   @unique
  name       String   @unique
  created_at DateTime @default(now())

  actions Action[]
  Plan    Plan[]

  @@map("thematic_areas")
}

model Action {
  id             String   @id @default(uuid())
  thematicAreaId String
  name           String   @unique
  created_at     DateTime @default(now())

  thematicArea ThematicArea @relation(fields: [thematicAreaId], references: [id])

  @@map("actions")
}

model NationalPlan {
  id               String             @id @default(uuid())
  name             String
  description      String
  created_at       DateTime           @default(now())
  NationalPlanGoal NationalPlanGoal[]

  @@map("national_plans")
}

model NationalPlanGoal {
  id             String   @id @default(uuid())
  nationalPlanId String
  number         Int
  name           String
  created_at     DateTime @default(now())

  nationalPlan NationalPlan @relation(fields: [nationalPlanId], references: [id])
  ActionPlan   ActionPlan[]

  @@map("national_plan_goals")
}

model TypeOfExpense {
  id         String   @id @default(uuid())
  name       String
  itemId     String
  created_at DateTime @default(now())
  item       Item     @relation(fields: [itemId], references: [id])

  @@map("types_of_expenses")
}

model ItemType {
  id         String      @id @default(uuid())
  name       String
  created_at DateTime    @default(now())
  ItemGroup  ItemGroup[]

  @@map("items_types")
}

model ItemGroup {
  id         String   @id @default(uuid())
  itemTypeId String
  name       String
  created_at DateTime @default(now())

  itemType  ItemType    @relation(fields: [itemTypeId], references: [id])
  ItemClass ItemClass[]

  @@map("items_groups")
}

model ItemClass {
  id          String   @id @default(uuid())
  itemGroupId String
  name        String
  created_at  DateTime @default(now())

  itemGroup ItemGroup @relation(fields: [itemGroupId], references: [id])
  Item      Item[]

  @@map("items_classes")
}

model Item {
  id            String          @id @default(uuid())
  itemClassId   String
  name          String
  created_at    DateTime        @default(now())
  itemclass     ItemClass       @relation(fields: [itemClassId], references: [id])
  TechnicalNote TechnicalNote[]
  ItemPlan      ItemPlan[]
  TypeOfExpense TypeOfExpense[]

  @@map("items")
}

model TechnicalNote {
  id          String   @id @default(uuid())
  itemId      String
  name        String
  description String
  created_at  DateTime @default(now())
  item        Item     @relation(fields: [itemId], references: [id])

  @@map("technical_notes")
}

model ImplementationStrategy {
  id          String   @id @default(uuid())
  diagnosis   String
  governance  String
  capacity    String
  acquisition String
  created_at  DateTime @default(now())
  Plan        Plan[]

  @@map("implementation_strategies")
}

model GeneralGoal {
  id         String   @id @default(uuid())
  name       String
  created_at DateTime @default(now())
  Plan       Plan[]

  @@map("general_goals")
}

model Plan {
  id                       String                 @id @default(uuid())
  generalGoalId            String
  implementationStrategyId String
  stateId                  String
  thematicAreaId           String
  diagnostic               String
  justification            String
  overallGoal              String
  indicator                String
  created_at               DateTime               @default(now())
  generalGoals             GeneralGoal            @relation(fields: [generalGoalId], references: [id])
  implementationStrategy   ImplementationStrategy @relation(fields: [implementationStrategyId], references: [id])
  state                    State                  @relation(fields: [stateId], references: [id])
  thematicArea             ThematicArea           @relation(fields: [thematicAreaId], references: [id])
  ActionPlan               ActionPlan[]

  @@map("plans")
}

model Institution {
  id         String     @id @default(uuid())
  name       String
  created_at DateTime   @default(now())
  ItemPlan   ItemPlan[]

  @@map("institutions")
}

model ActionPlan {
  id                 String           @id @default(uuid())
  planId             String
  nationalPlanGoalId String
  created_at         DateTime         @default(now())
  plan               Plan             @relation(fields: [planId], references: [id])
  nationalPlanGoal   NationalPlanGoal @relation(fields: [nationalPlanGoalId], references: [id])
  ItemPlan           ItemPlan[]

  @@map("actions_plans")
}

model ItemPlan {
  id               String      @id @default(uuid())
  institutionId    String
  actionPlanId     String
  itemId           String
  stateGoal        String
  indicator        String
  frequency        String
  indicatorFormula String
  plannedQuantity  Decimal
  plannedValue     Decimal
  created_at       DateTime    @default(now())
  instituition     Institution @relation(fields: [institutionId], references: [id])
  actionPlan       ActionPlan  @relation(fields: [actionPlanId], references: [id])
  item             Item        @relation(fields: [itemId], references: [id])

  @@map("items_plans")
}
